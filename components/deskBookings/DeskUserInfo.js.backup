import { BookingType } from 'constants/constants';
import { useEffect, useState } from 'react';
import useFirebase from 'hooks/useFirebase';

// REFACTOR: Abstract out DeskButton/DeskUserInfo helper functions
function getDeskUserInfo(deskBookingInfo, deskUsername) {
  const deskBookingType = deskBookingInfo.bookingType;
  // const { deskUserID } = deskBookingInfo; // Null if not booked

  // TODO: Convert deskUserID into username from firebase (not database)
  // const deskUsername = deskUserID;
  // getUsername(deskUserID)
  // const deskUsername = getUsername(deskUserID);
  switch (deskBookingType) {
    case BookingType.Available:
      return 'Available';
    case BookingType.SelfBooked:
      return `Booked by ${deskUsername} (you)`;
    case BookingType.OtherBooked:
      return `Booked by ${deskUsername}`;
    default:
      // TODO: error handling
      console.log(`Unknown BookingType: ${deskBookingType}`);
  }
}

export default function DeskUserInfo({ deskBookingInfo }) {
  const [data, setData] = useState(null);
  const { getUserInfo, isLoading } = useFirebase();

  // DEBUG: This is absolutely awful, but it's only for the demo...
  useEffect(() => {
    const getUserData = async () => {
      try {
        const { deskUserID } = deskBookingInfo;
        // console.log(deskUserID);
        const userData = await getUserInfo(deskUserID);
        // const userData = await getUserInfo('9EfX6sSkksZ2bpDYPD4Z42mA54F2');
        // DEBUG: It just keeps getting worse!
        if (userData === undefined) { throw new Error(); }
        setData(userData);
      } catch (e) {
        // DEBUG: This is _not_ how to handle errors...
        // console.log(e)
        const userData = {
          'firstName': 'Mysterious',
          'lastName': 'Stranger',
          'email': 'mysterious.stranger@and.digital'
        };
        setData(userData);
      };

    };
    getUserData();
  }, [getUserInfo, setData]);

  if (isLoading) return <p>Loading...</p>;
  if (data === null || data === undefined) {
    return <p>No user info available</p>;
  }

  // DEBUG: Again, very very bad
  const deskUsername = `${data.firstName} ${data.lastName}`;
  // console.log(data);

  return <>{getDeskUserInfo(deskBookingInfo, deskUsername)}</>;
}
